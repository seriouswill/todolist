{"version":3,"sources":["components/Input.js","components/ToDoList.js","App.js","index.js"],"names":["InputDisplay","props","id","value","input","type","onChange","e","setInput","target","onClick","newTasks","tasks","push","setTasks","pop","TaskList","map","task","index","splice","removeHandler","App","useState","className","Input","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA6BeA,EA1BM,SAACC,GAclB,OAAO,qBAAKC,GAAG,QAAR,SACL,gCAEA,uBACAC,MAAOF,EAAMG,MACbC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAON,EAAMO,SAASD,EAAEE,OAAON,UAEzC,wBAAQO,QApBa,WACrB,IAAMC,EAAQ,YAAOV,EAAMW,OAC3BD,EAASE,KAAKZ,EAAMG,OACpBH,EAAMa,SAASH,GACfV,EAAMO,SAAS,KAgBf,sBACA,wBAAQE,QAfS,WACf,IAAMC,EAAQ,YAAOV,EAAMW,OAC3BD,EAASI,IAAId,EAAMG,OACnBH,EAAMa,SAASH,GACfV,EAAMO,SAAS,KAWjB,oCCRSQ,EAhBE,SAACf,GAOd,OACE,8BACGA,EAAMW,MAAMK,KAAI,SAACC,EAAMC,GACtB,OAAO,8BAAID,EAAJ,IAAU,wBAAoBR,QAAS,kBAThC,SAACS,GACvB,IAAIR,EAAQ,YAAOV,EAAMW,OACnBD,EAASS,OAAOD,EAAO,GACvBlB,EAAMa,SAASH,GAMuCU,CAAcF,IAAjD,cAAaA,YCWzBG,MAlBf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENnB,EAFM,KAECI,EAFD,OAGae,mBAAS,IAHtB,mBAGNX,EAHM,KAGCE,EAHD,KAIb,OACE,sBAAKU,UAAU,MAAf,UAEI,kDAEA,cAAC,EAAD,CAAUtB,GAAG,WAAWU,MAAOA,EAAOE,SAAUA,IAChD,cAACW,EAAD,CAAerB,MAAOA,EAAOI,SAAUA,EAAUI,MAAOA,EAAOE,SAAUA,QCTjFY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.729f727c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst InputDisplay = (props) => {\r\n\r\n    const addTaskHandler = () => {\r\n      const newTasks = [...props.tasks]\r\n      newTasks.push(props.input)\r\n      props.setTasks(newTasks)\r\n      props.setInput(\"\")\r\n    }\r\n    const deleteTask = () => {\r\n        const newTasks = [...props.tasks]\r\n        newTasks.pop(props.input)\r\n        props.setTasks(newTasks)\r\n        props.setInput(\"\")\r\n    }\r\n    return <div id=\"input\">\r\n      <div>\r\n      \r\n      <input \r\n      value={props.input}\r\n      type=\"text\" \r\n      onChange={(e) => props.setInput(e.target.value)}\r\n      ></input>\r\n      <button onClick={addTaskHandler}>Add Task</button>\r\n      <button onClick={deleteTask}>Delete Last Task</button>\r\n    </div></div>\r\n  }\r\nexport default InputDisplay;  ","import React, { useState } from 'react'\r\n\r\nconst TaskList = (props) => {\r\n  const removeHandler = (index) => {\r\n\t\tlet newTasks = [...props.tasks];\r\n        newTasks.splice(index, 1);\r\n        props.setTasks(newTasks)\r\n        \r\n    }\r\n    return (\r\n      <div>\r\n        {props.tasks.map((task, index) => {\r\n          return <p>{task} <button key={index} onClick={() => removeHandler(index)}>X</button></p>\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default TaskList;\r\n","\nimport React, {useState} from 'react'\nimport InputDisplay from './components/Input';\nimport TaskList from './components/ToDoList';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\")\n  const [tasks, setTasks] = useState([])\n  return (\n    <div className=\"App\">\n      \n        <h1>Will's ToDo App!</h1>\n        \n        <TaskList id=\"tasklist\" tasks={tasks} setTasks={setTasks}/>\n        <InputDisplay  input={input} setInput={setInput} tasks={tasks} setTasks={setTasks}/>\n      \n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}